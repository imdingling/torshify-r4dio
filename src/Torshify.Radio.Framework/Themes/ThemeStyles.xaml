<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Framework="clr-namespace:Torshify.Radio.Framework"
    xmlns:extToolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit/extended">

    <Style
        TargetType="{x:Type TextBox}">
        <Setter
            Property="Foreground"
            Value="{DynamicResource {x:Static Framework:AppTheme.TextBoxForegroundBrushKey}}" />
        <Setter
            Property="Background"
            Value="{DynamicResource {x:Static Framework:AppTheme.TextBoxBrushKey}}" />
        <Setter
            Property="BorderBrush"
            Value="{DynamicResource {x:Static Framework:AppTheme.TextBoxBrushKey}}" />
        <Setter
            Property="SelectionBrush"
            Value="{DynamicResource {x:Static Framework:AppTheme.TextBoxEditSelectionBrushKey}}" />
        <Setter
            Property="CaretBrush"
            Value="{DynamicResource {x:Static Framework:AppTheme.TextCaretBrushKey}}" />
        <Setter
            Property="BorderThickness"
            Value="1" />
        <Setter
            Property="Padding"
            Value="1" />
        <Setter
            Property="AllowDrop"
            Value="True" />
        <Setter
            Property="FocusVisualStyle"
            Value="{x:Null}" />
        <Setter
            Property="ScrollViewer.PanningMode"
            Value="VerticalFirst" />
        <Setter
            Property="Stylus.IsFlicksEnabled"
            Value="False" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type TextBox}">
                    <Border
                        x:Name="Bd"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="True">
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="IsFocused"
                            Value="True">
                            <Setter
                                Property="Background"
                                TargetName="Bd"
                                Value="{DynamicResource {x:Static Framework:AppTheme.TextBoxEditBackgroundBrushKey}}" />
                            <Setter
                                Property="BorderBrush"
                                Value="{DynamicResource {x:Static Framework:AppTheme.TextBoxEditBorderBrushKey}}" />
                        </Trigger>
                        <Trigger
                            Property="IsReadOnly"
                            Value="True">
                            <Setter
                                Property="Background"
                                TargetName="Bd"
                                Value="{DynamicResource {x:Static Framework:AppTheme.TextBoxBrushKey}}" />
                        </Trigger>
                        <Trigger
                            Property="IsEnabled"
                            Value="False">
                            <Setter
                                Property="Background"
                                TargetName="Bd"
                                Value="{DynamicResource {x:Static Framework:AppTheme.TextBoxBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger
                Property="IsReadOnly"
                Value="True">
                <Setter
                    Property="Foreground"
                    Value="{DynamicResource {x:Static Framework:AppTheme.TextBoxEditReadOnlyBrushKey}}" />
                <Setter
                    Property="BorderBrush"
                    Value="{DynamicResource {x:Static Framework:AppTheme.TextBoxBrushKey}}" />
            </Trigger>
            <Trigger
                Property="IsEnabled"
                Value="False">
                <Setter
                    Property="BorderBrush"
                    Value="{DynamicResource {x:Static Framework:AppTheme.DisabledBrushKey}}" />
                <Setter
                    Property="Foreground"
                    Value="{DynamicResource {x:Static Framework:AppTheme.DisabledBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <DataTemplate
        x:Key="DefaultWatermarkTemplate">
        <ContentControl
            Margin="2,0,2,0"
            Content="{Binding}"
            Foreground="{DynamicResource {x:Static Framework:AppTheme.TextBoxEditReadOnlyBrushKey}}"
            Focusable="False" />
    </DataTemplate>

    <Style
        TargetType="{x:Type extToolkit:WatermarkTextBox}"
        BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter
            Property="WatermarkTemplate"
            Value="{StaticResource DefaultWatermarkTemplate}" />
        <Setter
            Property="HorizontalContentAlignment"
            Value="Stretch" />
        <Setter
            Property="VerticalContentAlignment"
            Value="Center" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type extToolkit:WatermarkTextBox}">
                    <Grid>
                        <Border
                            x:Name="Bd"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ContentPresenter
                            x:Name="PART_WatermarkHost"
                            Content="{TemplateBinding Watermark}"
                            ContentTemplate="{TemplateBinding WatermarkTemplate}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            IsHitTestVisible="False"
                            Margin="{TemplateBinding Padding}"
                            Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition
                                    Property="IsFocused"
                                    Value="False" />
                                <Condition
                                    Property="Text"
                                    Value="" />
                            </MultiTrigger.Conditions>
                            <Setter
                                Property="Visibility"
                                TargetName="PART_WatermarkHost"
                                Value="Visible" />
                        </MultiTrigger>
                        <Trigger
                            Property="IsFocused"
                            Value="True">
                            <Setter
                                Property="Background"
                                TargetName="Bd"
                                Value="{DynamicResource {x:Static Framework:AppTheme.TextBoxEditBackgroundBrushKey}}" />
                            <Setter
                                Property="BorderBrush"
                                Value="{DynamicResource {x:Static Framework:AppTheme.TextBoxEditBorderBrushKey}}" />
                        </Trigger>
                        <Trigger
                            Property="IsReadOnly"
                            Value="True">
                            <Setter
                                Property="Background"
                                TargetName="Bd"
                                Value="{DynamicResource {x:Static Framework:AppTheme.TextBoxBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        TargetType="{x:Type ButtonBase}">
        <Setter
            Property="Background"
            Value="Transparent" />
        <Setter
            Property="Foreground"
            Value="{DynamicResource {x:Static Framework:AppTheme.ForegroundBrushKey}}" />
        <Setter
            Property="BorderBrush"
            Value="{DynamicResource {x:Static Framework:AppTheme.ForegroundBrushKey}}" />
        <Setter
            Property="FontFamily"
            Value="{DynamicResource {x:Static Framework:AppTheme.FontFamilySemiBold}}" />
        <Setter
            Property="FontSize"
            Value="{DynamicResource {x:Static Framework:AppTheme.FontSizeNormal}}" />
        <Setter
            Property="Padding"
            Value="4,2,4,2" />
        <Setter
            Property="BorderThickness"
            Value="2" />
        <Setter
            Property="FocusVisualStyle"
            Value="{x:Null}" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type ButtonBase}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Padding="{TemplateBinding Padding}">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger
                Property="IsMouseOver"
                Value="True">
                <Setter
                    Property="Cursor"
                    Value="Hand" />
            </Trigger>
            <Trigger
                Property="ToggleButton.IsChecked"
                Value="True">
                <Setter
                    Property="Background"
                    Value="{DynamicResource {x:Static Framework:AppTheme.ContrastBackgroundKey}}" />
                <Setter
                    Property="Foreground"
                    Value="{DynamicResource {x:Static Framework:AppTheme.ContrastForegroundKey}}" />
            </Trigger>
            <Trigger
                Property="IsPressed"
                Value="True">
                <Setter
                    Property="Background"
                    Value="{DynamicResource {x:Static Framework:AppTheme.ContrastBackgroundKey}}" />
                <Setter
                    Property="Foreground"
                    Value="{DynamicResource {x:Static Framework:AppTheme.ContrastForegroundKey}}" />
            </Trigger>
            <Trigger
                Property="IsEnabled"
                Value="False">
                <Setter
                    Property="BorderBrush"
                    Value="{DynamicResource {x:Static Framework:AppTheme.DisabledBrushKey}}" />
                <Setter
                    Property="Foreground"
                    Value="{DynamicResource {x:Static Framework:AppTheme.DisabledBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        TargetType="{x:Type Button}"
        BasedOn="{StaticResource {x:Type ButtonBase}}" />

    <Style
        TargetType="{x:Type ToggleButton}"
        BasedOn="{StaticResource {x:Type ButtonBase}}" />

    <Geometry
        x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>

    <Style
        x:Key="ComboBoxReadonlyToggleButton"
        TargetType="{x:Type ToggleButton}"
        BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter
            Property="IsTabStop"
            Value="false" />
        <Setter
            Property="Focusable"
            Value="false" />
        <Setter
            Property="ClickMode"
            Value="Press" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type ToggleButton}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Padding="{TemplateBinding Padding}">
                        <Grid
                            HorizontalAlignment="Right"
                            Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                            <Path
                                x:Name="Arrow"
                                Data="{StaticResource DownArrowGeometry}"
                                Fill="{TemplateBinding Foreground}"
                                HorizontalAlignment="Center"
                                Margin="3,1,0,0"
                                VerticalAlignment="Center" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="ComboBoxEditableTextBox"
        TargetType="{x:Type TextBox}">
        <Setter
            Property="OverridesDefaultStyle"
            Value="true" />
        <Setter
            Property="AllowDrop"
            Value="true" />
        <Setter
            Property="MinWidth"
            Value="0" />
        <Setter
            Property="MinHeight"
            Value="0" />
        <Setter
            Property="FocusVisualStyle"
            Value="{x:Null}" />
        <Setter
            Property="ScrollViewer.PanningMode"
            Value="VerticalFirst" />
        <Setter
            Property="Stylus.IsFlicksEnabled"
            Value="False" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type TextBox}">
                    <ScrollViewer
                        x:Name="PART_ContentHost"
                        Background="Transparent"
                        Focusable="false"
                        HorizontalScrollBarVisibility="Hidden"
                        VerticalScrollBarVisibility="Hidden" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate
        x:Key="ComboBoxEditableTemplate"
        TargetType="{x:Type ComboBox}">
        <Grid
            x:Name="Placement"
            SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="*" />
                <ColumnDefinition
                    Width="Auto" />
            </Grid.ColumnDefinitions>
            <Popup
                x:Name="PART_Popup"
                AllowsTransparency="true"
                Grid.ColumnSpan="2"
                IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                Placement="Bottom">
                <Border
                    x:Name="Shdw"
                    Background="Transparent"
                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                    MinWidth="{Binding ActualWidth, ElementName=Placement}">
                    <Border
                        x:Name="DropDownBorder"
                        BorderBrush="{DynamicResource {x:Static Framework:AppTheme.ForegroundBrushKey}}"
                        BorderThickness="1"
                        Background="{DynamicResource {x:Static Framework:AppTheme.ContrastBackgroundKey}}">
                        <ScrollViewer
                            x:Name="DropDownScrollViewer">
                            <Grid
                                RenderOptions.ClearTypeHint="Enabled">
                                <Canvas
                                    HorizontalAlignment="Left"
                                    Height="0"
                                    VerticalAlignment="Top"
                                    Width="0">
                                    <Rectangle
                                        x:Name="OpaqueRect"
                                        Fill="{Binding Background, ElementName=DropDownBorder}"
                                        Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                        Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                                </Canvas>
                                <ItemsPresenter
                                    x:Name="ItemsPresenter"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Border>
            </Popup>
            <Border
                x:Name="Border"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}"
                Grid.ColumnSpan="2" />
            <TextBox
                x:Name="PART_EditableTextBox"
                Foreground="{TemplateBinding Foreground}"
                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                Margin="{TemplateBinding Padding}"
                Style="{StaticResource ComboBoxEditableTextBox}"
                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
            <ToggleButton
                Grid.Column="1"
                BorderBrush="Transparent"
                Background="Transparent"
                Foreground="{TemplateBinding Foreground}"
                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                Style="{StaticResource ComboBoxReadonlyToggleButton}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger
                Property="HasItems"
                Value="false">
                <Setter
                    Property="Height"
                    TargetName="DropDownBorder"
                    Value="95" />
            </Trigger>
            <Trigger
                Property="IsGrouping"
                Value="true">
                <Setter
                    Property="ScrollViewer.CanContentScroll"
                    Value="false" />
            </Trigger>
            <Trigger
                Property="ScrollViewer.CanContentScroll"
                SourceName="DropDownScrollViewer"
                Value="false">
                <Setter
                    Property="Canvas.Top"
                    TargetName="OpaqueRect"
                    Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter
                    Property="Canvas.Left"
                    TargetName="OpaqueRect"
                    Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
            <Trigger
                Property="IsEnabled"
                Value="False">
                <Setter
                    Property="BorderBrush"
                    Value="{DynamicResource {x:Static Framework:AppTheme.DisabledBrushKey}}" />
                <Setter
                    Property="Foreground"
                    Value="{DynamicResource {x:Static Framework:AppTheme.DisabledBrushKey}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style
        TargetType="{x:Type ComboBox}">
        <Setter
            Property="FocusVisualStyle"
            Value="{x:Null}" />
        <Setter
            Property="Foreground"
            Value="{DynamicResource {x:Static Framework:AppTheme.ForegroundBrushKey}}" />
        <Setter
            Property="Background"
            Value="Transparent" />
        <Setter
            Property="BorderBrush"
            Value="{DynamicResource {x:Static Framework:AppTheme.ForegroundBrushKey}}" />
        <Setter
            Property="BorderThickness"
            Value="2" />
        <Setter
            Property="ScrollViewer.HorizontalScrollBarVisibility"
            Value="Auto" />
        <Setter
            Property="ScrollViewer.VerticalScrollBarVisibility"
            Value="Auto" />
        <Setter
            Property="Padding"
            Value="4,3" />
        <Setter
            Property="ScrollViewer.CanContentScroll"
            Value="true" />
        <Setter
            Property="ScrollViewer.PanningMode"
            Value="Both" />
        <Setter
            Property="Stylus.IsFlicksEnabled"
            Value="False" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type ComboBox}">
                    <Grid
                        x:Name="MainGrid"
                        SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition
                                Width="*" />
                            <ColumnDefinition
                                MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                Width="0" />
                        </Grid.ColumnDefinitions>
                        <Popup
                            x:Name="PART_Popup"
                            AllowsTransparency="true"
                            Grid.ColumnSpan="2"
                            IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                            Margin="1"
                            PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                            Placement="Bottom">
                            <Border
                                x:Name="Shdw"
                                Background="Transparent"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                                <Border
                                    x:Name="DropDownBorder"
                                    BorderBrush="{DynamicResource {x:Static Framework:AppTheme.ContrastBackgroundKey}}"
                                    BorderThickness="1"
                                    Background="{DynamicResource {x:Static Framework:AppTheme.ContrastBackgroundKey}}">
                                    <ScrollViewer
                                        x:Name="DropDownScrollViewer">
                                        <Grid
                                            RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas
                                                HorizontalAlignment="Left"
                                                Height="0"
                                                VerticalAlignment="Top"
                                                Width="0">
                                                <Rectangle
                                                    x:Name="OpaqueRect"
                                                    Fill="{Binding Background, ElementName=DropDownBorder}"
                                                    Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                                    Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                                            </Canvas>
                                            <ItemsPresenter
                                                x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Border>
                        </Popup>
                        <ToggleButton
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            Foreground="{TemplateBinding Foreground}"
                            Grid.ColumnSpan="2"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource ComboBoxReadonlyToggleButton}" />
                        <ContentPresenter
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            IsHitTestVisible="false"
                            Margin="{TemplateBinding Padding}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="HasItems"
                            Value="false">
                            <Setter
                                Property="Height"
                                TargetName="DropDownBorder"
                                Value="95" />
                        </Trigger>
                        <Trigger
                            Property="IsGrouping"
                            Value="true">
                            <Setter
                                Property="ScrollViewer.CanContentScroll"
                                Value="false" />
                        </Trigger>
                        <Trigger
                            Property="ScrollViewer.CanContentScroll"
                            SourceName="DropDownScrollViewer"
                            Value="false">
                            <Setter
                                Property="Canvas.Top"
                                TargetName="OpaqueRect"
                                Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                            <Setter
                                Property="Canvas.Left"
                                TargetName="OpaqueRect"
                                Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>

            <Trigger
                Property="IsEditable"
                Value="True">
                <Setter
                    Property="BorderBrush"
                    Value="{DynamicResource {x:Static Framework:AppTheme.TextBoxBrushKey}}" />
                <Setter
                    Property="Background"
                    Value="{DynamicResource {x:Static Framework:AppTheme.TextBoxBrushKey}}" />
                <Setter
                    Property="Foreground"
                    Value="{DynamicResource {x:Static Framework:AppTheme.TextBoxForegroundBrushKey}}" />
                <Setter
                    Property="IsTabStop"
                    Value="false" />
                <Setter
                    Property="Padding"
                    Value="3" />
                <Setter
                    Property="Template"
                    Value="{StaticResource ComboBoxEditableTemplate}" />
            </Trigger>
            <Trigger
                Property="IsKeyboardFocusWithin"
                Value="True">
                <Setter
                    Property="Background"
                    Value="{DynamicResource {x:Static Framework:AppTheme.TextBoxEditBackgroundBrushKey}}" />
                <Setter
                    Property="BorderBrush"
                    Value="{DynamicResource {x:Static Framework:AppTheme.TextBoxEditBorderBrushKey}}" />
                <Setter
                    Property="Foreground"
                    Value="{DynamicResource {x:Static Framework:AppTheme.TextBoxForegroundBrushKey}}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition
                        Property="IsEnabled"
                        Value="False" />
                    <Condition
                        Property="IsEditable"
                        Value="True" />
                </MultiTrigger.Conditions>
                <Setter
                    Property="BorderBrush"
                    Value="{DynamicResource {x:Static Framework:AppTheme.DisabledBrushKey}}" />
                <Setter
                    Property="Foreground"
                    Value="{DynamicResource {x:Static Framework:AppTheme.TextBoxEditReadOnlyBrushKey}}" />
                <Setter
                    Property="Background"
                    Value="{DynamicResource {x:Static Framework:AppTheme.TextBoxBrushKey}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition
                        Property="IsEnabled"
                        Value="False" />
                    <Condition
                        Property="IsEditable"
                        Value="False" />
                </MultiTrigger.Conditions>
                <Setter
                    Property="BorderBrush"
                    Value="{DynamicResource {x:Static Framework:AppTheme.DisabledBrushKey}}" />
                <Setter
                    Property="Foreground"
                    Value="{DynamicResource {x:Static Framework:AppTheme.DisabledBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>