<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:chrome="clr-namespace:Microsoft.Windows.Controls.Chromes;assembly=WPFToolkit.Extended"
    xmlns:extToolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit/extended"
    xmlns:coreConverters="clr-namespace:Microsoft.Windows.Controls.Core.Converters;assembly=WPFToolkit.Extended">
    <Style
        TargetType="{x:Type ButtonBase}">
        <Setter
            Property="Background"
            Value="Transparent" />
        <Setter
            Property="Foreground"
            Value="Black" />
        <Setter
            Property="BorderBrush"
            Value="Black" />
        <Setter
            Property="BorderThickness"
            Value="2" />
        <Setter
            Property="Padding"
            Value="5,2,5,2" />
        <Setter
            Property="FocusVisualStyle"
            Value="{x:Null}" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type ButtonBase}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Padding="{TemplateBinding Padding}">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger
                Property="IsMouseOver"
                Value="True">
                <Setter
                    Property="Cursor"
                    Value="Hand" />
            </Trigger>
            <Trigger
                Property="ToggleButton.IsChecked"
                Value="True">
                <Setter
                    Property="Background"
                    Value="Black" />
                <Setter
                    Property="Foreground"
                    Value="White" />
            </Trigger>
            <Trigger
                Property="IsPressed"
                Value="True">
                <Setter
                    Property="Background"
                    Value="Black" />
                <Setter
                    Property="Foreground"
                    Value="White" />
            </Trigger>
            <Trigger
                Property="IsEnabled"
                Value="False">
                <Setter
                    Property="BorderBrush"
                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                <Setter
                    Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        TargetType="{x:Type Button}"
        BasedOn="{StaticResource {x:Type ButtonBase}}" />

    <Style
        TargetType="{x:Type ToggleButton}"
        BasedOn="{StaticResource {x:Type ButtonBase}}" />

    <coreConverters:InverseBoolConverter
        x:Key="InverseBoolConverter" />

    <LinearGradientBrush
        x:Key="PopupDarkBorderBrush"
        EndPoint="0.5,1"
        StartPoint="0.5,0">
        <GradientStop
            Color="#FFA3AEB9"
            Offset="0" />
        <GradientStop
            Color="#FF8399A9"
            Offset="0.375" />
        <GradientStop
            Color="#FF718597"
            Offset="0.375" />
        <GradientStop
            Color="#FF617584"
            Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush
        x:Key="PopupBackgroundBrush"
        StartPoint="0,0"
        EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop
                    Offset="0"
                    Color="#FFffffff" />
                <GradientStop
                    Offset="1"
                    Color="#FFE8EBED" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style
        TargetType="{x:Type extToolkit:DropDownButton}">
        <Setter
            Property="BorderThickness"
            Value="1" />
        <Setter
            Property="IsTabStop"
            Value="False" />
        <Setter
            Property="HorizontalContentAlignment"
            Value="Center" />
        <Setter
            Property="VerticalContentAlignment"
            Value="Center" />
        <Setter
            Property="Padding"
            Value="3" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type extToolkit:DropDownButton}">
                    <Grid
                        x:Name="MainGrid"
                        SnapsToDevicePixels="True">
                        <ToggleButton
                            x:Name="PART_DropDownButton"
                            Grid.Column="1"
                            IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                            IsHitTestVisible="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition
                                        Width="*" />
                                    <ColumnDefinition
                                        Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter
                                    Margin="{TemplateBinding Padding}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    RecognizesAccessKey="true" />
                                <Grid
                                    x:Name="arrowGlyph"
                                    IsHitTestVisible="False"
                                    Margin="4,3,4,3"
                                    Grid.Column="1">
                                    <Path
                                        Width="7"
                                        Height="4"
                                        Data="M 0,1 C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1 z"
                                        Fill="#FF000000" />
                                </Grid>
                            </Grid>
                        </ToggleButton>

                        <Popup
                            x:Name="PART_Popup"
                            HorizontalOffset="1"
                            VerticalOffset="1"
                            AllowsTransparency="True"
                            StaysOpen="False"
                            Placement="Bottom"
                            Focusable="False"
                            IsOpen="{Binding IsChecked, ElementName=PART_DropDownButton}">
                            <Border
                                BorderThickness="1"
                                Background="{StaticResource PopupBackgroundBrush}"
                                BorderBrush="{StaticResource PopupDarkBorderBrush}">
                                <ContentPresenter
                                    Content="{TemplateBinding DropDownContent}" />
                            </Border>
                        </Popup>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>