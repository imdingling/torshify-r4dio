<UserControl
    x:Class="Torshify.Radio.EchoNest.Views.Style.MainStationView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:Framework="clr-namespace:Torshify.Radio.Framework;assembly=Torshify.Radio.Framework"
    xmlns:Controls="clr-namespace:Torshify.Radio.Framework.Controls;assembly=Torshify.Radio.Framework"
    xmlns:Converters="clr-namespace:Torshify.Radio.Framework.Converters;assembly=Torshify.Radio.Framework"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:Behaviors="clr-namespace:Torshify.Radio.Framework.Behaviors;assembly=Torshify.Radio.Framework"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="300">
    <UserControl.Resources>
        <Converters:CountToFontSizeConverter
            x:Key="CountToFontSizeConverter" />
        <ControlTemplate
            x:Key="ExpanderToggleButton"
            TargetType="ToggleButton">
            <Border
                Name="Border"
                Background="Transparent">
                <DockPanel>
                    <Path
                        Margin="4,0,4,0"
                        DockPanel.Dock="Left"
                        Name="Arrow"
                        Fill="{DynamicResource {x:Static Framework:AppTheme.ForegroundBrushKey}}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Data="M 0 0 L 4 4 L 8 0 Z"
                        RenderTransformOrigin="0.5,0.5">
                        <Path.RenderTransform>
                            <RotateTransform />
                        </Path.RenderTransform>
                    </Path>
                    <ContentPresenter
                        ContentSource="Content" />
                </DockPanel>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger
                    Property="ToggleButton.IsMouseOver"
                    Value="true">
                    <Setter
                        TargetName="Border"
                        Property="Background"
                        Value="{DynamicResource {x:Static Framework:AppTheme.AccentBrushKey}}" />
                </Trigger>
                <Trigger
                    Property="IsPressed"
                    Value="true">
                    <Setter
                        TargetName="Border"
                        Property="Background"
                        Value="{DynamicResource {x:Static Framework:AppTheme.SubtleBrushKey}}" />
                </Trigger>
                <Trigger
                    Property="IsChecked"
                    Value="true">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="Arrow"
                                    Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                    To="180"
                                    Duration="0:0:0.2" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="Arrow"
                                    Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                    To="0"
                                    Duration="0:0:0.2" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style
            TargetType="Expander">
            <Setter
                Property="Template">
                <Setter.Value>
                    <ControlTemplate
                        TargetType="Expander">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition
                                    Height="Auto" />
                                <RowDefinition
                                    Name="ContentRow"
                                    Height="0" />
                            </Grid.RowDefinitions>
                            <Border
                                Name="Border"
                                Grid.Row="0">
                                <ToggleButton
                                    IsChecked="{Binding Path=IsExpanded,Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    OverridesDefaultStyle="True"
                                    Template="{StaticResource ExpanderToggleButton}"
                                    Background="{DynamicResource {x:Static Framework:AppTheme.ForegroundBrushKey}}">
                                    <ContentPresenter
                                        Grid.Column="1"
                                        Margin="4"
                                        ContentSource="Header"
                                        RecognizesAccessKey="True" />
                                </ToggleButton>
                            </Border>
                            <Border
                                Name="Content"
                                Grid.Row="1"
                                BorderThickness="1,0,1,1"
                                CornerRadius="0,0,2,2">
                                <ContentPresenter
                                    Margin="4" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger
                                Property="IsExpanded"
                                Value="True">
                                <Setter
                                    TargetName="ContentRow"
                                    Property="Height"
                                    Value="{Binding ElementName=Content,Path=DesiredHeight}" />
                            </Trigger>
                            <Trigger
                                Property="IsEnabled"
                                Value="False">
                                <Setter
                                    TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static Framework:AppTheme.ForegroundBrushKey}}" />
                                <Setter
                                    TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{DynamicResource {x:Static Framework:AppTheme.ForegroundBrushKey}}" />
                                <Setter
                                    Property="Foreground"
                                    Value="{DynamicResource {x:Static Framework:AppTheme.ForegroundBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <BooleanToVisibilityConverter
            x:Key="BooleanToVisibilityConverter" />
        <Converters:BoolToVisibleOrHidden
            x:Key="InvertedBooleanToVisibilityConverter"
            Reverse="True"
            Collapse="True" />
    </UserControl.Resources>
    <DockPanel>
        <Button
            DockPanel.Dock="Bottom"
            Content="Start radio"
            Command="{Binding StartRadioCommand}" />
        <GroupBox
            MaxWidth="150"
            DockPanel.Dock="Right"
            Margin="8,0,0,0">
            <GroupBox.Header>
                <DockPanel>
                    <TextBlock
                        Visibility="{Binding HasItems, ElementName=ArtistPreviewList, Converter={StaticResource BooleanToVisibilityConverter}}"
                        DockPanel.Dock="Bottom"
                        Text="This doesn't reflect the actual playlist, only the type of artists matching the criterias"
                        TextWrapping="Wrap"
                        Foreground="{DynamicResource {x:Static Framework:AppTheme.SubtleBrushKey}}"
                        FontFamily="{DynamicResource {x:Static Framework:AppTheme.FontFamilyLight}}"
                        FontSize="{DynamicResource {x:Static Framework:AppTheme.FontSizeNormal}}" />
                    <TextBlock
                        Text="Artist preview"
                        Foreground="{DynamicResource {x:Static Framework:AppTheme.ForegroundBrushKey}}"
                        FontFamily="{DynamicResource {x:Static Framework:AppTheme.FontFamilySemiBold}}"
                        FontSize="{DynamicResource {x:Static Framework:AppTheme.FontSizeMedium}}" />
                </DockPanel>
            </GroupBox.Header>
            <DockPanel>
                <TextBlock
                    Visibility="{Binding HasItems, ElementName=ArtistPreviewList, Converter={StaticResource InvertedBooleanToVisibilityConverter}}"
                    Foreground="{DynamicResource {x:Static Framework:AppTheme.SubtleBrushKey}}"
                    FontFamily="{DynamicResource {x:Static Framework:AppTheme.FontFamilyLight}}"
                    FontSize="{DynamicResource {x:Static Framework:AppTheme.FontSizeMedium}}"
                    Text="No artists matching.." />
                <ScrollViewer
                    Visibility="{Binding HasItems, ElementName=ArtistPreviewList, Converter={StaticResource BooleanToVisibilityConverter}}"
                    HorizontalScrollBarVisibility="Disabled">
                    <ItemsControl
                        Name="ArtistPreviewList"
                        ItemsSource="{Binding PreviewArtistList}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <Hyperlink>
                                        <TextBlock
                                            Text="{Binding Name}"
                                            TextTrimming="CharacterEllipsis">
                                            <i:Interaction.Behaviors>
                                                <Behaviors:ArtistRelatedCommandBarBehavior
                                                    ArtistName="{Binding Name}" />
                                            </i:Interaction.Behaviors>
                                        </TextBlock>
                                    </Hyperlink>
                                </TextBlock>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>
            </DockPanel>
        </GroupBox>
        <ScrollViewer
            HorizontalScrollBarVisibility="Disabled">
            <StackPanel>
                <Expander>
                    <Expander.Header>
                        <DockPanel>
                            <TextBlock
                                DockPanel.Dock="Left"
                                Text="Styles"
                                Foreground="{DynamicResource {x:Static Framework:AppTheme.ForegroundBrushKey}}"
                                FontFamily="{DynamicResource {x:Static Framework:AppTheme.FontFamilySemiBold}}"
                                FontSize="{DynamicResource {x:Static Framework:AppTheme.FontSizeLarge}}" />
                            <TextBlock
                                Margin="8,0,0,0"
                                Text="{Binding SelectedStylesText}"
                                TextWrapping="Wrap"
                                Foreground="{DynamicResource {x:Static Framework:AppTheme.SubtleBrushKey}}"
                                FontFamily="{DynamicResource {x:Static Framework:AppTheme.FontFamilyLight}}"
                                FontSize="{DynamicResource {x:Static Framework:AppTheme.FontSizeLarge}}" />
                        </DockPanel>
                    </Expander.Header>
                    <ItemsControl
                        ItemsSource="{Binding Styles}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <ToggleButton
                                    x:Name="btn"
                                    BorderBrush="{DynamicResource {x:Static Framework:AppTheme.SubtleBrushKey}}"
                                    BorderThickness="0.5"
                                    Content="{Binding Name}"
                                    Margin="1"
                                    FontSize="{Binding Count, Converter={StaticResource CountToFontSizeConverter}}"
                                    Command="{Binding DataContext.ToggleStyleCommand, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                    CommandParameter="{Binding}" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Expander>
                <Expander>
                    <Expander.Header>
                        <DockPanel>
                            <TextBlock
                                DockPanel.Dock="Left"
                                Text="Moods"
                                Foreground="{DynamicResource {x:Static Framework:AppTheme.ForegroundBrushKey}}"
                                FontFamily="{DynamicResource {x:Static Framework:AppTheme.FontFamilySemiBold}}"
                                FontSize="{DynamicResource {x:Static Framework:AppTheme.FontSizeLarge}}" />
                            <TextBlock
                                Margin="8,0,0,0"
                                Text="{Binding SelectedMoodsText}"
                                TextWrapping="Wrap"
                                Foreground="{DynamicResource {x:Static Framework:AppTheme.SubtleBrushKey}}"
                                FontFamily="{DynamicResource {x:Static Framework:AppTheme.FontFamilyLight}}"
                                FontSize="{DynamicResource {x:Static Framework:AppTheme.FontSizeLarge}}" />
                        </DockPanel>
                    </Expander.Header>
                    <ItemsControl
                        ItemsSource="{Binding Moods}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <ToggleButton
                                    x:Name="btn"
                                    BorderBrush="{DynamicResource {x:Static Framework:AppTheme.SubtleBrushKey}}"
                                    BorderThickness="0.5"
                                    Content="{Binding Name}"
                                    FontSize="{Binding Count, Converter={StaticResource CountToFontSizeConverter}}"
                                    Margin="1"
                                    Command="{Binding DataContext.ToggleMoodCommand, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                    CommandParameter="{Binding}" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Expander>
                <Expander>
                    <Expander.Header>
                        <DockPanel>
                            <TextBlock
                                DockPanel.Dock="Left"
                                Text="Parameters"
                                Foreground="{DynamicResource {x:Static Framework:AppTheme.ForegroundBrushKey}}"
                                FontFamily="{DynamicResource {x:Static Framework:AppTheme.FontFamilySemiBold}}"
                                FontSize="{DynamicResource {x:Static Framework:AppTheme.FontSizeLarge}}" />
                            <TextBlock
                                Margin="8,0,0,0"
                                Text="{Binding MetricsText}"
                                TextWrapping="Wrap"
                                Foreground="{DynamicResource {x:Static Framework:AppTheme.SubtleBrushKey}}"
                                FontFamily="{DynamicResource {x:Static Framework:AppTheme.FontFamilyLight}}"
                                FontSize="{DynamicResource {x:Static Framework:AppTheme.FontSizeLarge}}" />
                        </DockPanel>
                    </Expander.Header>
                    <Controls:FormPanel
                        Columns="1">
                        <TextBlock
                            Foreground="{DynamicResource {x:Static Framework:AppTheme.ForegroundBrushKey}}"
                            Text="Tempo (BPM)" />
                        <DockPanel>
                            <TextBlock
                                Foreground="{DynamicResource {x:Static Framework:AppTheme.ForegroundBrushKey}}"
                                DockPanel.Dock="Right"
                                Text="{Binding Tempo.Minimum, StringFormat={}{0:0}}"
                                Margin="4,0,0,0" />
                            <Slider
                                VerticalAlignment="Center"
                                SmallChange="1"
                                LargeChange="10"
                                Minimum="0"
                                Maximum="500"
                                Value="{Binding Tempo.Minimum}" />
                        </DockPanel>
                        <TextBlock
                            Foreground="{DynamicResource {x:Static Framework:AppTheme.ForegroundBrushKey}}"
                            Text="Loudness (dB)" />
                        <DockPanel>
                            <TextBlock
                                Foreground="{DynamicResource {x:Static Framework:AppTheme.ForegroundBrushKey}}"
                                DockPanel.Dock="Right"
                                Text="{Binding Loudness.Minimum, StringFormat={}{0:0}}"
                                Margin="4,0,0,0" />
                            <Slider
                                VerticalAlignment="Center"
                                SmallChange="1"
                                LargeChange="10"
                                Minimum="-100"
                                Maximum="100"
                                Value="{Binding Loudness.Minimum}" />
                        </DockPanel>
                        <TextBlock
                            Foreground="{DynamicResource {x:Static Framework:AppTheme.ForegroundBrushKey}}"
                            Text="Energy" />
                        <Slider
                            VerticalAlignment="Center"
                            Minimum="0"
                            Maximum="1"
                            SmallChange="0.1"
                            LargeChange="0.2"
                            Value="{Binding Energy.Minimum}" />
                        <TextBlock
                            Foreground="{DynamicResource {x:Static Framework:AppTheme.ForegroundBrushKey}}"
                            Text="Danceability" />
                        <Slider
                            VerticalAlignment="Center"
                            Minimum="0"
                            Maximum="1"
                            SmallChange="0.1"
                            LargeChange="0.2"
                            Value="{Binding Danceability.Minimum}" />
                        <TextBlock
                            Foreground="{DynamicResource {x:Static Framework:AppTheme.ForegroundBrushKey}}"
                            Text="Artist familiarity" />
                        <Slider
                            VerticalAlignment="Center"
                            Minimum="0"
                            Maximum="1"
                            SmallChange="0.1"
                            LargeChange="0.2"
                            Value="{Binding ArtistFamiliarity.Minimum}" />
                        <TextBlock
                            Foreground="{DynamicResource {x:Static Framework:AppTheme.ForegroundBrushKey}}"
                            Text="Artist hotness" />
                        <Slider
                            VerticalAlignment="Center"
                            Minimum="0"
                            Maximum="1"
                            SmallChange="0.1"
                            LargeChange="0.2"
                            Value="{Binding ArtistHotness.Minimum}" />
                        <TextBlock
                            Foreground="{DynamicResource {x:Static Framework:AppTheme.ForegroundBrushKey}}"
                            Text="Song hotness" />
                        <Slider
                            VerticalAlignment="Center"
                            Minimum="0"
                            Maximum="1"
                            SmallChange="0.1"
                            LargeChange="0.2"
                            Value="{Binding SongHotness.Minimum}" />
                    </Controls:FormPanel>
                </Expander>
            </StackPanel>
        </ScrollViewer>
    </DockPanel>
</UserControl>
